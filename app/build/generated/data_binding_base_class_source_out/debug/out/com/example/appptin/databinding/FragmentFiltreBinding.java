// Generated by view binder compiler. Do not edit!
package com.example.appptin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appptin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFiltreBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btX;

  @NonNull
  public final Button buttonApply;

  @NonNull
  public final CheckBox checkBoxCapsulas;

  @NonNull
  public final CheckBox checkBoxCrema;

  @NonNull
  public final CheckBox checkBoxGel;

  @NonNull
  public final CheckBox checkBoxLiquidos;

  @NonNull
  public final CheckBox checkBoxOral;

  @NonNull
  public final CheckBox checkBoxPols;

  @NonNull
  public final CheckBox checkBoxPrescription;

  @NonNull
  public final CheckBox checkBoxTabletas;

  @NonNull
  public final CheckBox checkBoxTopicos;

  @NonNull
  public final EditText editTextMaxPrice;

  @NonNull
  public final EditText editTextMinPrice;

  @NonNull
  public final TextView textViewFormat;

  @NonNull
  public final TextView textViewPrice;

  @NonNull
  public final TextView textViewVia;

  private FragmentFiltreBinding(@NonNull ScrollView rootView, @NonNull Button btX,
      @NonNull Button buttonApply, @NonNull CheckBox checkBoxCapsulas,
      @NonNull CheckBox checkBoxCrema, @NonNull CheckBox checkBoxGel,
      @NonNull CheckBox checkBoxLiquidos, @NonNull CheckBox checkBoxOral,
      @NonNull CheckBox checkBoxPols, @NonNull CheckBox checkBoxPrescription,
      @NonNull CheckBox checkBoxTabletas, @NonNull CheckBox checkBoxTopicos,
      @NonNull EditText editTextMaxPrice, @NonNull EditText editTextMinPrice,
      @NonNull TextView textViewFormat, @NonNull TextView textViewPrice,
      @NonNull TextView textViewVia) {
    this.rootView = rootView;
    this.btX = btX;
    this.buttonApply = buttonApply;
    this.checkBoxCapsulas = checkBoxCapsulas;
    this.checkBoxCrema = checkBoxCrema;
    this.checkBoxGel = checkBoxGel;
    this.checkBoxLiquidos = checkBoxLiquidos;
    this.checkBoxOral = checkBoxOral;
    this.checkBoxPols = checkBoxPols;
    this.checkBoxPrescription = checkBoxPrescription;
    this.checkBoxTabletas = checkBoxTabletas;
    this.checkBoxTopicos = checkBoxTopicos;
    this.editTextMaxPrice = editTextMaxPrice;
    this.editTextMinPrice = editTextMinPrice;
    this.textViewFormat = textViewFormat;
    this.textViewPrice = textViewPrice;
    this.textViewVia = textViewVia;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFiltreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFiltreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_filtre, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFiltreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_X;
      Button btX = ViewBindings.findChildViewById(rootView, id);
      if (btX == null) {
        break missingId;
      }

      id = R.id.buttonApply;
      Button buttonApply = ViewBindings.findChildViewById(rootView, id);
      if (buttonApply == null) {
        break missingId;
      }

      id = R.id.checkBoxCapsulas;
      CheckBox checkBoxCapsulas = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxCapsulas == null) {
        break missingId;
      }

      id = R.id.checkBoxCrema;
      CheckBox checkBoxCrema = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxCrema == null) {
        break missingId;
      }

      id = R.id.checkBoxGel;
      CheckBox checkBoxGel = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxGel == null) {
        break missingId;
      }

      id = R.id.checkBoxLiquidos;
      CheckBox checkBoxLiquidos = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxLiquidos == null) {
        break missingId;
      }

      id = R.id.checkBoxOral;
      CheckBox checkBoxOral = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxOral == null) {
        break missingId;
      }

      id = R.id.checkBoxPols;
      CheckBox checkBoxPols = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxPols == null) {
        break missingId;
      }

      id = R.id.checkBoxPrescription;
      CheckBox checkBoxPrescription = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxPrescription == null) {
        break missingId;
      }

      id = R.id.checkBoxTabletas;
      CheckBox checkBoxTabletas = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxTabletas == null) {
        break missingId;
      }

      id = R.id.checkBoxTopicos;
      CheckBox checkBoxTopicos = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxTopicos == null) {
        break missingId;
      }

      id = R.id.editTextMaxPrice;
      EditText editTextMaxPrice = ViewBindings.findChildViewById(rootView, id);
      if (editTextMaxPrice == null) {
        break missingId;
      }

      id = R.id.editTextMinPrice;
      EditText editTextMinPrice = ViewBindings.findChildViewById(rootView, id);
      if (editTextMinPrice == null) {
        break missingId;
      }

      id = R.id.textViewFormat;
      TextView textViewFormat = ViewBindings.findChildViewById(rootView, id);
      if (textViewFormat == null) {
        break missingId;
      }

      id = R.id.textViewPrice;
      TextView textViewPrice = ViewBindings.findChildViewById(rootView, id);
      if (textViewPrice == null) {
        break missingId;
      }

      id = R.id.textViewVia;
      TextView textViewVia = ViewBindings.findChildViewById(rootView, id);
      if (textViewVia == null) {
        break missingId;
      }

      return new FragmentFiltreBinding((ScrollView) rootView, btX, buttonApply, checkBoxCapsulas,
          checkBoxCrema, checkBoxGel, checkBoxLiquidos, checkBoxOral, checkBoxPols,
          checkBoxPrescription, checkBoxTabletas, checkBoxTopicos, editTextMaxPrice,
          editTextMinPrice, textViewFormat, textViewPrice, textViewVia);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
