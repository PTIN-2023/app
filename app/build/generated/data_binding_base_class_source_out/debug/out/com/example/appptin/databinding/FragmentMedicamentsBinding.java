// Generated by view binder compiler. Do not edit!
package com.example.appptin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appptin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMedicamentsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btFiltres;

  @NonNull
  public final CardView card;

  @NonNull
  public final ListView listView;

  @NonNull
  public final RecyclerView medicamentsRecycler;

  @NonNull
  public final Button searchButton;

  @NonNull
  public final EditText searchView;

  @NonNull
  public final TextView textViewHistorial;

  private FragmentMedicamentsBinding(@NonNull FrameLayout rootView, @NonNull Button btFiltres,
      @NonNull CardView card, @NonNull ListView listView, @NonNull RecyclerView medicamentsRecycler,
      @NonNull Button searchButton, @NonNull EditText searchView,
      @NonNull TextView textViewHistorial) {
    this.rootView = rootView;
    this.btFiltres = btFiltres;
    this.card = card;
    this.listView = listView;
    this.medicamentsRecycler = medicamentsRecycler;
    this.searchButton = searchButton;
    this.searchView = searchView;
    this.textViewHistorial = textViewHistorial;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMedicamentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMedicamentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_medicaments, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMedicamentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_Filtres;
      Button btFiltres = ViewBindings.findChildViewById(rootView, id);
      if (btFiltres == null) {
        break missingId;
      }

      id = R.id.card;
      CardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.list_view;
      ListView listView = ViewBindings.findChildViewById(rootView, id);
      if (listView == null) {
        break missingId;
      }

      id = R.id.medicaments_recycler;
      RecyclerView medicamentsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (medicamentsRecycler == null) {
        break missingId;
      }

      id = R.id.searchButton;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.searchView;
      EditText searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.textView_historial;
      TextView textViewHistorial = ViewBindings.findChildViewById(rootView, id);
      if (textViewHistorial == null) {
        break missingId;
      }

      return new FragmentMedicamentsBinding((FrameLayout) rootView, btFiltres, card, listView,
          medicamentsRecycler, searchButton, searchView, textViewHistorial);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
